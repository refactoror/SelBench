=SelBench 1.0=

Installer: https://addons.mozilla.org/en-US/firefox/addon/selenium-ide-selbench/

=Description=

Provides utilities for testing, validating, and benchmarking Selenium IDE scripts. This is especially useful for instrumenting scripts that are used to test Selenium IDE extensions.

=Features=

* Convenience functions: <tt>$w()</tt> and <tt>$d()</tt>
* Commands: <tt>alert</tt>, <tt>log</tt>, <tt>clearLog</tt>,
    <tt>deleteVar</tt>, <tt>deleteVars</tt>,
    <tt>expectError</tt>, <tt>emit</tt>, <tt>assertEmitted</tt>, <tt>resetEmitted</tt>,
    <tt>startTimer</tt>, <tt>timerElapsed</tt>

=Examples of Use=

Object access:

 assertEval|$d().title === $w().document.title

Simple logging and prompting:

 alert|"hello world"
 log|"hello world"
 clearLog

Undefining Selenium variables:

 deleteVar|n
 deleteVars|a,b,c

Verifying that a command will fail as expected:

 expectError|"n is not define"
 getEval|n

Tracking state and sequence,("$" + "{n}~" prevents variable substitution):

 resetEmitted
 deleteVar|n
 emit|"${n}"
 store|0|n
 emit|n++
 emit|"${n}"
 assertEmitted|"$" + "{n}~" + 0 + "~" + 1

Timing script execution:

 startTimer
 timerElapsed

<tt>$w()</tt> and <tt>$d()</tt> can be used in expressions:

 assertEval|$d().title === $w().document.title|true

=Selenium Server=

Selenese scripts that use SelBench commands can also be run in Selenium Server
via the <tt>-user-extensions</tt> and <tt>-htmlSuite</tt> options.
Get the current <tt>user-extensions.js</tt> here:
https://github.com/refactoror/SelBench/user-extensions.js

For more information on running Selenium Server,
see: http://www.seleniumhq.org/docs/08_user_extensions.jsp#using-user-extensions-with-selenium-ide

Note that prior to version 1.1,
SelBench has been a Firefox extension only,
whereas Selenium Server can target a wide range of browsers.
So to be useful,
SelBench will need to become compatible with the full set of browsers that Selenium Server supports.
This should not be a difficult goal.
SelBench currently passes its full regression test suite when run against
<tt>firefox</tt> and <tt>googlechrome</tt>, (on Windows).
Community help is welcome in expanding this list to include:
<tt>iexplore</tt>, <tt>safari</tt>, <tt>opera</tt>.

Be aware that browser-compatibility has a relatively low support priority.
When reporting an issue, be sure to provide very specific browser/OS info,
as well as the faling test case, test html, and error log.
Better yet, if you can fix the problem, submit a github pull request
-- which is how server support came about in the first place.
A big thanks to Matthew Kastor!

For an overview of how the SelBench user extension works, see:
https://github.com/refactoror/SelBench/blob/master/notes/SeleniumServer-notes.txt

=Limitations=

<tt>expectError</tt> works on the next command to be executed.
Therefore it does not make much sense when used on:
* commands that cannot fail, (e.g., the SelBlocks <tt>exitTest</tt> command)
* commands that themselves manage other commands, (e.g., the SelBlocks <tt>try</tt> command)
* on itself

=Revision History=

* 2015-??-??: v1.1
** SelBench now works with Selenium Server. (A big thanks to Matthew Kastor for this contribution, and regression testing improvements.)
** Added clearLog command.
** Fixed Issue #4 expectError fails on unexpected error
** Fixed Issue #5 expectError not clearing error status
* 2014-03-07: v1.0

All versions: https://addons.mozilla.org/en-US/firefox/addon/selenium-ide-selbench/versions/
